import 'package:win32/win32.dart' show VIRTUAL_KEY;

import 'exceptions.dart';

const Map<String, int> _stringToVk = {
  '0': VIRTUAL_KEY.VK_0,
  '1': VIRTUAL_KEY.VK_1,
  '2': VIRTUAL_KEY.VK_2,
  '3': VIRTUAL_KEY.VK_3,
  '4': VIRTUAL_KEY.VK_4,
  '5': VIRTUAL_KEY.VK_5,
  '6': VIRTUAL_KEY.VK_6,
  '7': VIRTUAL_KEY.VK_7,
  '8': VIRTUAL_KEY.VK_8,
  '9': VIRTUAL_KEY.VK_9,
  'A': VIRTUAL_KEY.VK_A,
  'B': VIRTUAL_KEY.VK_B,
  'C': VIRTUAL_KEY.VK_C,
  'D': VIRTUAL_KEY.VK_D,
  'E': VIRTUAL_KEY.VK_E,
  'F': VIRTUAL_KEY.VK_F,
  'G': VIRTUAL_KEY.VK_G,
  'H': VIRTUAL_KEY.VK_H,
  'I': VIRTUAL_KEY.VK_I,
  'J': VIRTUAL_KEY.VK_J,
  'K': VIRTUAL_KEY.VK_K,
  'L': VIRTUAL_KEY.VK_L,
  'M': VIRTUAL_KEY.VK_M,
  'N': VIRTUAL_KEY.VK_N,
  'O': VIRTUAL_KEY.VK_O,
  'P': VIRTUAL_KEY.VK_P,
  'Q': VIRTUAL_KEY.VK_Q,
  'R': VIRTUAL_KEY.VK_R,
  'S': VIRTUAL_KEY.VK_S,
  'T': VIRTUAL_KEY.VK_T,
  'U': VIRTUAL_KEY.VK_U,
  'V': VIRTUAL_KEY.VK_V,
  'W': VIRTUAL_KEY.VK_W,
  'X': VIRTUAL_KEY.VK_X,
  'Y': VIRTUAL_KEY.VK_Y,
  'Z': VIRTUAL_KEY.VK_Z,
  'F1': VIRTUAL_KEY.VK_F1,
  'F2': VIRTUAL_KEY.VK_F2,
  'F3': VIRTUAL_KEY.VK_F3,
  'F4': VIRTUAL_KEY.VK_F4,
  'F5': VIRTUAL_KEY.VK_F5,
  'F6': VIRTUAL_KEY.VK_F6,
  'F7': VIRTUAL_KEY.VK_F7,
  'F8': VIRTUAL_KEY.VK_F8,
  'F9': VIRTUAL_KEY.VK_F9,
  'F10': VIRTUAL_KEY.VK_F10,
  'F11': VIRTUAL_KEY.VK_F11,
  'F12': VIRTUAL_KEY.VK_F12,
  'NUMLOCK': VIRTUAL_KEY.VK_NUMLOCK,
  'SCROLLLOCK': VIRTUAL_KEY.VK_SCROLL,
  'BACKSPACE': VIRTUAL_KEY.VK_BACK,
  'TAB': VIRTUAL_KEY.VK_TAB,
  'ENTER': VIRTUAL_KEY.VK_RETURN,
  'SHIFT': VIRTUAL_KEY.VK_SHIFT,
  'LSHIFT': VIRTUAL_KEY.VK_LSHIFT,
  'RSHIFT': VIRTUAL_KEY.VK_RSHIFT,
  'CTRL': VIRTUAL_KEY.VK_CONTROL,
  'LCTRL': VIRTUAL_KEY.VK_LCONTROL,
  'RCTRL': VIRTUAL_KEY.VK_RCONTROL,
  'ALT': VIRTUAL_KEY.VK_MENU,
  'LALT': VIRTUAL_KEY.VK_LMENU,
  'RALT': VIRTUAL_KEY.VK_RMENU,
  'CAPITAL': VIRTUAL_KEY.VK_CAPITAL,
  'KANA': VIRTUAL_KEY.VK_KANA,
  'HANGEUL': VIRTUAL_KEY.VK_HANGEUL,
  'HANGUL': VIRTUAL_KEY.VK_HANGUL,
  'JUNJA': VIRTUAL_KEY.VK_JUNJA,
  'FINAL': VIRTUAL_KEY.VK_FINAL,
  'HANJA': VIRTUAL_KEY.VK_HANJA,
  'KANJI': VIRTUAL_KEY.VK_KANJI,
  'ESCAPE': VIRTUAL_KEY.VK_ESCAPE,
  'CONVERT': VIRTUAL_KEY.VK_CONVERT,
  'NONCONVERT': VIRTUAL_KEY.VK_NONCONVERT,
  'ACCEPT': VIRTUAL_KEY.VK_ACCEPT,
  'MODECHANGE': VIRTUAL_KEY.VK_MODECHANGE,
  'SPACE': VIRTUAL_KEY.VK_SPACE,
  'PRIOR': VIRTUAL_KEY.VK_PRIOR,
  'NEXT': VIRTUAL_KEY.VK_NEXT,
  'END': VIRTUAL_KEY.VK_END,
  'HOME': VIRTUAL_KEY.VK_HOME,
  'LEFT': VIRTUAL_KEY.VK_LEFT,
  'UP': VIRTUAL_KEY.VK_UP,
  'RIGHT': VIRTUAL_KEY.VK_RIGHT,
  'DOWN': VIRTUAL_KEY.VK_DOWN,
  'SELECT': VIRTUAL_KEY.VK_SELECT,
  'PRINT': VIRTUAL_KEY.VK_PRINT,
  'EXECUTE': VIRTUAL_KEY.VK_EXECUTE,
  'SNAPSHOT': VIRTUAL_KEY.VK_SNAPSHOT,
  'INSERT': VIRTUAL_KEY.VK_INSERT,
  'DELETE': VIRTUAL_KEY.VK_DELETE,
  'HELP': VIRTUAL_KEY.VK_HELP,
  'WIN': VIRTUAL_KEY.VK_LWIN,
  'LWIN': VIRTUAL_KEY.VK_LWIN,
  'RWIN': VIRTUAL_KEY.VK_RWIN,
  'APPS': VIRTUAL_KEY.VK_APPS,
  'SLEEP': VIRTUAL_KEY.VK_SLEEP,
  'PGUP': VIRTUAL_KEY.VK_PRIOR,
  'PGDOWN': VIRTUAL_KEY.VK_NEXT,
  'N0': VIRTUAL_KEY.VK_NUMPAD0,
  'N1': VIRTUAL_KEY.VK_NUMPAD1,
  'N2': VIRTUAL_KEY.VK_NUMPAD2,
  'N3': VIRTUAL_KEY.VK_NUMPAD3,
  'N4': VIRTUAL_KEY.VK_NUMPAD4,
  'N5': VIRTUAL_KEY.VK_NUMPAD5,
  'N6': VIRTUAL_KEY.VK_NUMPAD6,
  'N7': VIRTUAL_KEY.VK_NUMPAD7,
  'N8': VIRTUAL_KEY.VK_NUMPAD8,
  'N9': VIRTUAL_KEY.VK_NUMPAD9,
  '*': VIRTUAL_KEY.VK_MULTIPLY,
  '+': VIRTUAL_KEY.VK_ADD,
  '=': VIRTUAL_KEY.VK_OEM_PLUS,
  ',': VIRTUAL_KEY.VK_OEM_COMMA,
  '-': VIRTUAL_KEY.VK_OEM_MINUS, // Shift + -
  '_': VIRTUAL_KEY.VK_OEM_MINUS,
  '.': VIRTUAL_KEY.VK_OEM_PERIOD,
  ';': VIRTUAL_KEY.VK_OEM_1,
  '/': VIRTUAL_KEY.VK_OEM_2,
  '?': VIRTUAL_KEY.VK_OEM_2, // Shift + /
  '`': VIRTUAL_KEY.VK_OEM_3,
  '[': VIRTUAL_KEY.VK_OEM_4,
  '\\': VIRTUAL_KEY.VK_OEM_5,
  ']': VIRTUAL_KEY.VK_OEM_6,
  '\'': VIRTUAL_KEY.VK_OEM_7,
  '"': VIRTUAL_KEY.VK_OEM_7, // Shift + '
  '!': VIRTUAL_KEY.VK_1, // Shift + 1
  'MEDIA_PLAY': VIRTUAL_KEY.VK_MEDIA_PLAY_PAUSE,
  'MEDIA_PREVIOUS': VIRTUAL_KEY.VK_MEDIA_PREV_TRACK,
  'MEDIA_NEXT': VIRTUAL_KEY.VK_MEDIA_NEXT_TRACK,
  'MEDIA_MUTE': VIRTUAL_KEY.VK_VOLUME_MUTE,
  'MEDIA_VOLUME_UP': VIRTUAL_KEY.VK_VOLUME_UP,
  'MEDIA_VOLUME_DOWN': VIRTUAL_KEY.VK_VOLUME_DOWN,
  'MEDIA_STOP': VIRTUAL_KEY.VK_MEDIA_STOP,
  'MEDIA_BACK': VIRTUAL_KEY.VK_BROWSER_BACK,
  'MEDIA_FORWARD': VIRTUAL_KEY.VK_BROWSER_FORWARD,
  'MEDIA_REFRESH': VIRTUAL_KEY.VK_BROWSER_REFRESH,
};

int stringToVk(String key) {
  key = key.toUpperCase();

  if (_stringToVk.containsKey(key)) {
    return _stringToVk[key]!;
  }

  throw InvalidKeyException('No VK for String: $key');
}

const List<int> _vkModifiers = [
  VIRTUAL_KEY.VK_SHIFT,
  VIRTUAL_KEY.VK_LSHIFT,
  VIRTUAL_KEY.VK_RSHIFT,
  VIRTUAL_KEY.VK_CONTROL,
  VIRTUAL_KEY.VK_LCONTROL,
  VIRTUAL_KEY.VK_RCONTROL,
  VIRTUAL_KEY.VK_MENU,
  VIRTUAL_KEY.VK_LMENU,
  VIRTUAL_KEY.VK_RMENU,
  VIRTUAL_KEY.VK_LWIN,
  VIRTUAL_KEY.VK_RWIN,
];

bool isModifierVk(int vk) => _vkModifiers.contains(vk);

List<int> getVkModifiers() => _vkModifiers;
